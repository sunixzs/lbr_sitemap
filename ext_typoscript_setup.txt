config.tx_extbase.persistence.classes {
	LBR\LbrSitemap\Domain\Model\Page.mapping {
		tableName = pages
		columns {
			tx_lbrsitemap_changefreq.mapOnProperty = changefreq
			tx_lbrsitemap_priority.mapOnProperty = priority
			tx_lbrsitemap_description.mapOnProperty = description
			tx_lbrsitemap_image.mapOnProperty = image
		}
	}
	
	LBR\LbrSitemap\Domain\Model\Content.mapping {
		tableName = tt_content
	}
}

tx_lbrsitemap_link_config {
	doNotLinkIt = 1
	stdWrap.cObject = CASE
	stdWrap.cObject {
		key.field = doktype
		
		default = TEXT
		default {
			field = nav_title // title
			stdWrap.htmlSpecialChars = 1
			typolink {
				parameter.field = uid
				ATagParams = class="{field:tx_template_css_class}"
				ATagParams.insertData = 1
				title.field = subtitle // title
			}
		}
		
		# doktype: shortcut
		4 < .default
		4 {
			typolink.parameter.field = shortcut
		}
		
		# doktype: external url
		3 < .default
		3 {
			field = title
			typolink.parameter.field = url
			typolink.extTarget.field = target
		}
	}
}



plugin.tx_lbrsitemap {
	settings {
		tree = HMENU
		tree {
			special = list
			special.value = WILL BE SET BY CONTROLLER
			wrap = <nav class="lbr-sitemap lbr-sitemap-tree">|</nav>
			1 = TMENU
			1 {
				wrap = <ul>|</ul>
				expAll = 1
				
				NO < tx_lbrsitemap_link_config
				NO {
					wrapItemAndSub = <li>|</li>
					#stdWrap.htmlSpecialChars = 1
					#ATagTitle.field = subtitle
				}
			}
		}
		
		tree_from_directory < .tree
		tree_from_directory.special = directory
		
		tree_with_abstract = HMENU
		tree_with_abstract {
			special = list
			special.value = WILL BE SET BY CONTROLLER
			wrap = <nav class="lbr-sitemap lbr-sitemap-tree">|</nav>
			1 = TMENU
			1 {
				wrap = <ul>|</ul>
				expAll = 1
				NO {
					wrapItemAndSub = <li>|</li>
					linkWrap = <div class="lbr-sitemap-link">|</div>
					stdWrap.htmlSpecialChars = 1
					ATagTitle.field = subtitle
					after {
						data = field : abstract
						required = 1
						htmlSpecialChars = 1
						wrap = <div class="lbr-sitemap-abstract">|</div>
					}	
				}
			}
		}
		
		tree_from_directory_with_abstract < .tree_with_abstract
		tree_from_directory_with_abstract.special = directory
		
		index = COA
		index {
			wrap = <ul class="lbr-sitemap-list">|</ul>
			
			1 = HMENU
			1 {
				special = list
				special.value = WILL BE SET BY CONTROLLER
				wrap = <li><div class="lbr-sitemap-char" id="char_###INDEX###">###CHAR###</div>|</li>
				1 = TMENU
				1 {
					wrap = <ul>|</ul>
					alternativeSortingField = nav_title // title
					
					NO < tx_lbrsitemap_link_config
					NO {
						wrapItemAndSub = <li>|</li>
						#stdWrap.htmlSpecialChars = 1
						#ATagTitle.field = subtitle
					}
				}
			}
		}
		
		index_with_abstract = COA
		index_with_abstract {
			wrap = <ul class="lbr-sitemap-list">|</ul>
			
			1 = HMENU
			1 {
				special = list
				special.value = WILL BE SET BY CONTROLLER
				wrap = <li><div class="lbr-sitemap-char" id="char_###INDEX###">###CHAR###</div>|</li>
				1 = TMENU
				1 {
					wrap = <ul>|</ul>
					alternativeSortingField = title
					NO {
						wrapItemAndSub = <li>|</li>
						stdWrap.htmlSpecialChars = 1
						ATagTitle.field = subtitle
						after {
							data = field : abstract
							required = 1
							htmlSpecialChars = 1
							wrap = <div class="lbr-sitemap-abstract">|</div>
						}	
					}
				}
			}
		}
	}
}


tx_lbrsitemap_xml = PAGE
tx_lbrsitemap_xml {
	typeNum = 567
	config {
		disableAllHeaderCode = 1
		xhtml_cleaning = 0
		admPanel = 0
		additionalHeaders = Content-type: text/xml
		no_cache = 0
	}

	10 = USER
	10 {
		userFunc = TYPO3\CMS\Extbase\Core\Bootstrap->run
		extensionName = LbrSitemap
		pluginName = Pi3
		vendorName = LBR
		controller = Sitemap
		switchableControllerActions {
			Sitemap {
				1 = xml
			}
		}
		view < plugin.tx_lbrsitemap.view
		persistence < plugin.tx_lbrsitemap.persistence
		settings < plugin.tx_lbrsitemap.settings
		settings {
			dokTypes = 1,2,10,11,12
			rootpageUids {
				1 {
					uid = 1
					depth = 5
				}
			}
		}
	}
}
